{"version":3,"sources":["components/statistics/Statistics.module.css","components/feedback/FeedbackOptions.module.css","components/section/Section.jsx","components/statistics/Statistics.jsx","components/feedback/FeedbackOptions.jsx","components/notification/Notification.jsx","App.js","index.js"],"names":["module","exports","Section","title","children","className","s","container","Statistics","good","neutral","bad","total","positiveFeedbackPercentage","Math","round","textColor","list","style","color","FeedbackOptions","options","feedbackList","map","item","btn","type","onClick","Object","values","keys","toUpperCase","Notification","message","App","useState","setGood","setNeutral","setBad","state","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2IACAA,EAAOC,QAAU,CAAC,KAAO,yBAAyB,KAAO,yBAAyB,QAAU,4BAA4B,IAAM,0B,oCCA9HD,EAAOC,QAAU,CAAC,aAAe,sCAAsC,IAAM,+B,gKCE9D,SAASC,EAAT,GAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACvC,OACI,sBAAKC,UAAWC,IAAEC,UAAlB,UACE,oBAAIF,UAAWC,IAAEH,MAAjB,SAAyBA,IACxBC,K,oBCHM,SAASI,EAAT,GAMT,IAJFC,EAIC,EAJDA,KACAC,EAGC,EAHDA,QACAC,EAEC,EAFDA,IACAC,EACC,EADDA,MAGIC,EAA6B,WACjC,OAAOC,KAAKC,MAAON,EAAOG,EAAS,MAG7BI,EAAS,qBACb,IAAMH,IADO,kBAEbA,IAA+B,GAFlB,2BAIXH,EAAUE,EAAS,IAAO,GAC1B,GACIF,EAAUE,EAAS,IAAO,GAC5B,EAAMF,EAAUE,EAAS,IAAO,IAC9B,EARO,KAWjB,OAEE,qCACA,qBAAIP,UAAWC,IAAEW,KAAjB,UACI,qBAAIZ,UAAWC,IAAEG,KAAjB,UACE,iCACKA,EADL,IACY,OAEZ,sBAAMJ,UAAU,iBAAhB,oCAKF,qBAAIA,UAAWC,IAAEI,QAAjB,UACE,iCACKA,EADL,IACe,OAEf,sBAAML,UAAU,iBAAhB,kCAMF,qBAAIA,UAAWC,IAAEK,IAAjB,UACE,iCACGA,EADH,IACS,OAET,sBAAMN,UAAU,iBAAhB,0CAOFI,IAASG,EACL,oBAAGM,MAAO,CAACC,MAAOH,GAAlB,UAA8B,iCAAOH,IAAP,OAA9B,gBACS,IAATJ,EACE,mBAAGS,MAAO,CAACC,MAAOH,GAAlB,oDACA,oBAAGE,MAAO,CAACC,MAAOH,GAAlB,UAA+B,iCAAOH,IAAP,OAA/B,oCAA4G,+BAAOD,IAAnH,U,oBC7DC,SAASQ,EAAT,GAAqC,IAAXC,EAAU,EAAVA,QACvC,OACI,oBAAIhB,UAAWC,IAAEgB,aAAjB,SACGD,EAAQE,KAAI,SAAAC,GAAI,OACf,6BACE,wBAAQnB,UAAWC,IAAEmB,IACnBC,KAAK,SACLC,QAASC,OAAOC,OAAOL,GAAM,GAF/B,SAIGI,OAAOE,KAAKN,GAAM,GAAGO,iBALjBH,OAAOE,KAAKN,GAAM,SCLtB,SAASQ,EAAT,GAAoC,IAAZC,EAAW,EAAXA,QACrC,OAAO,+BAAOA,ICIhB,IA+BeC,EA/BH,WACV,MAAwBC,mBAAS,GAAjC,mBAAO1B,EAAP,KAAa2B,EAAb,KACA,EAA8BD,mBAAS,GAAvC,mBAAOzB,EAAP,KAAgB2B,EAAhB,KACA,EAAsBF,mBAAS,GAA/B,mBAAOxB,EAAP,KAAY2B,EAAZ,KAEMjB,EAAU,CACd,CAAEZ,KAAM,kBAAM2B,GAAQ,SAAAG,GAAK,OAAIA,EAAQ,OACvC,CAAE7B,QAAS,kBAAM2B,GAAW,SAAAE,GAAK,OAAIA,EAAQ,OAC7C,CAAE5B,IAAK,kBAAM2B,GAAO,SAAAC,GAAK,OAAIA,EAAQ,QAGjC3B,EAAQH,EAAOC,EAAUC,EAE/B,OACE,qCACE,cAACT,EAAD,CAASC,MAAM,wBAAwBE,UAAU,WAAjD,SACE,cAACe,EAAD,CAAiBC,QAASA,MAE5B,cAACnB,EAAD,CAASC,MAAM,aAAf,SACGS,EAAQ,EACP,mCACE,cAACJ,EAAD,CAAYC,KAAMA,EAAMC,QAASA,EAASC,IAAKA,EAAKC,MAAOA,MAG7D,cAACoB,EAAD,CAAcC,QAAQ,2CC3BhCO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.751cb254.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Statistics_list__YTrvS\",\"good\":\"Statistics_good__2F18h\",\"neutral\":\"Statistics_neutral__1UUGq\",\"bad\":\"Statistics_bad__2Fkr0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"feedbackList\":\"FeedbackOptions_feedbackList__3xMon\",\"btn\":\"FeedbackOptions_btn__V1fTF\"};","import s from './Section.module.css';\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default function Section ({title, children }) {\r\n  return (\r\n      <div className={s.container}>\r\n        <h2 className={s.title}>{title}</h2>\r\n        {children}\r\n      </div>\r\n  )  \r\n}\r\n\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.object.isRequired,\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport s from \"./Statistics.module.css\";\r\n\r\nexport default function Statistics(\r\n  {\r\n    good,\r\n    neutral,\r\n    bad,\r\n    total,\r\n  }) {\r\n  \r\n  const positiveFeedbackPercentage = () => {\r\n    return Math.round((good / total) * 100);\r\n  }\r\n  \r\n    const textColor = `rgba(\r\n    ${200 - positiveFeedbackPercentage()},\r\n    ${positiveFeedbackPercentage() + 50},\r\n    50,\r\n    ${((neutral / total) * 100) > 60\r\n      ? 0.4\r\n        : ((neutral / total) * 100) > 10\r\n        ? 1 - ((neutral / total) * 100) * 0.01\r\n          : 1\r\n    })`;\r\n  \r\n  return (\r\n\r\n    <>\r\n    <ul className={s.list}>\r\n        <li className={s.good}>\r\n          <span>\r\n              {good} {\" \"}\r\n          </span>\r\n          <span className=\"material-icons\">\r\n          sentiment_satisfied \r\n          </span>\r\n      </li>\r\n\r\n        <li className={s.neutral}>\r\n          <span>\r\n              {neutral} {\" \"}\r\n          </span>\r\n          <span className=\"material-icons\">\r\n            sentiment_neutral \r\n          </span>\r\n\r\n      </li>\r\n\r\n        <li className={s.bad}>\r\n          <span>\r\n            {bad} {\" \"}\r\n          </span>\r\n          <span className=\"material-icons\">\r\n            sentiment_dissatisfied \r\n          </span>\r\n      </li>\r\n      \r\n      </ul>\r\n      {\r\n        good === total\r\n          ? <p style={{color: textColor}}><span>{positiveFeedbackPercentage()}%</span> positive!</p>\r\n          : good === 0\r\n            ? <p style={{color: textColor}} > There are no positive feedbacks here.</p>\r\n            : <p style={{color: textColor}} ><span>{positiveFeedbackPercentage()}%</span> feedbacks are positive of total <span>{total}</span>.</p>\r\n      }\r\n      </>\r\n  );\r\n\r\n}\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from \"./FeedbackOptions.module.css\"\r\n\r\nexport default function FeedbackOptions({options}) {\r\n  return (\r\n      <ul className={s.feedbackList}>\r\n        {options.map(item => (\r\n          <li key={Object.keys(item)[0]}>\r\n            <button className={s.btn}\r\n              type=\"button\"\r\n              onClick={Object.values(item)[0]}\r\n              >\r\n              {Object.keys(item)[0].toUpperCase()}\r\n            </button>\r\n            </li>\r\n        ))}\r\n      </ul>\r\n  );\r\n\r\n}\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.arrayOf(PropTypes.object),\r\n}\r\n\r\n\r\n","import React from 'react';\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default function Notification({ message }) {\r\n  return <span>{message}</span>;\r\n}\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};","import './App.css';\nimport React from 'react';\nimport { useState } from 'react';\nimport Section from './components/section/Section';\nimport Statistics from './components/statistics/Statistics';\nimport FeedbackOptions from './components/feedback/FeedbackOptions';\nimport Notification from './components/notification/Notification';\n\nconst App = () => {\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const options = [\n    { good: () => setGood(state => state + 1) },\n    { neutral: () => setNeutral(state => state + 1) },\n    { bad: () => setBad(state => state + 1) },\n  ];\n\n  const total = good + neutral + bad;\n\n  return (\n    <>\n      <Section title=\"Please leave feedback\" className=\"feedback\">\n        <FeedbackOptions options={options} />\n      </Section>\n      <Section title=\"Statistics\">\n        {total > 0 ? (\n          <>\n            <Statistics good={good} neutral={neutral} bad={bad} total={total} />\n          </>\n        ) : (\n          <Notification message=\"There are no feedbacks here yet.\" />\n        )}\n      </Section>\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}